-- ASSIGNING THE ACCOUNT TYPE 
USE ROLE ACCOUNTADMIN;

-- USING THE WAREHOUSE AVAILABLE
USE WAREHOUSE COMPUTE_WH;

-- CREATING A DATABASE NAMED AS SUBQUERIES_DATABASE
CREATE DATABASE IF NOT EXISTS Recursive_Database;

-- USING THE DATABASE CREATED
USE DATABASE Recursive_Database;

-- CREATING A SCHEMA NAMED AS SUBQUERIES_SCHEMA
CREATE SCHEMA IF NOT EXISTS Recursive_SCHEMA;

-- USING THE SCHEMA CREATED 
USE SCHEMA Recursive_SCHEMA;

-- Practice Problems 
-- Department Table
CREATE OR REPLACE TABLE DEPARTMENTS (
    DEPT_ID INT,
    DEPT_NAME STRING
);

INSERT INTO DEPARTMENTS (DEPT_ID, DEPT_NAME) VALUES
(1, 'HR'),
(2, 'Finance'),
(3, 'IT'),
(4, 'Marketing'),
(5, 'Operations');

-- Employee Table
CREATE OR REPLACE TABLE EMPLOYEES (
    EMP_ID INT,
    EMP_NAME STRING,
    MANAGER_ID INT,
    DEPT_ID INT,
    SALARY INT
);

INSERT INTO EMPLOYEES (EMP_ID, EMP_NAME, MANAGER_ID, DEPT_ID, SALARY) VALUES
(101, 'Alice',   NULL, 2, 90000),   -- Finance Head
(102, 'Bob',     101,  2, 60000),
(103, 'Charlie', 101,  2, 55000),
(104, 'David',   NULL, 3, 120000),  -- IT Head
(105, 'Eve',     104,  3, 80000),
(106, 'Frank',   104,  3, 75000),
(107, 'Grace',   NULL, 1, 70000),   -- HR Head
(108, 'Heidi',   107,  1, 50000),
(109, 'Ivan',    NULL, 4, 95000),   -- Marketing Head
(110, 'Judy',    109,  4, 60000),
(111, 'Ken',     104,  3, 85000),
(112, 'Laura',   109,  4, 72000),
(113, 'Mallory', 107,  1, 48000),
(114, 'Niaj',    101,  2, 58000),
(115, 'Oscar',   104,  3, 93000),
(116, 'Peggy',   109,  4, 66000),
(117, 'Quinn',   NULL, 5, 110000),  -- Ops Head
(118, 'Ruth',    117,  5, 75000),
(119, 'Sybil',   117,  5, 72000),
(120, 'Trent',   117,  5, 70000),
(121, 'Uma',     117,  5, 69000),
(122, 'Victor',  104,  3, 77000),
(123, 'Wendy',   107,  1, 52000);

SELECT * FROM EMPLOYEE;

-- Union and Union all 
-- Contractors Table
CREATE OR REPLACE TABLE CONTRACTORS (
    CONTRACTOR_ID INT,
    CONTRACTOR_NAME STRING,
    DEPT_ID INT,
    SALARY INT
);

INSERT INTO CONTRACTORS (CONTRACTOR_ID, CONTRACTOR_NAME, DEPT_ID, SALARY) VALUES
(201, 'Alex', 3, 40000),
(202, 'Brian', 2, 45000),
(203, 'Cathy', 5, 42000),
(204, 'Derek', 4, 46000),
(205, 'Eva',   3, 40000); -- Duplicate salary with Alex to test UNION vs UNION ALL

-- Problem 1 
/*
Problem 1 (Challenging): Second Highest Salary by Department â€“ Without Using MAX() Twice

Question:
Find the second highest salary in each department. But you cannot simply use MAX() twice.
Students should use CTEs with window functions (DENSE_RANK() or ROW_NUMBER()) to solve.
*/
-- Solution
SELECT *
FROM (
SELECT
    DEPT_NAME,
    SALARY,
    DENSE_RANK() OVER(PARTITION BY DEPT_NAME ORDER BY SALARY DESC) AS RANK_SALARY
FROM DEPARTMENTS as dept
JOIN EMPLOYEES as emp
ON dept.dept_id = emp.dept_id) as ranked
WHERE RANK_SALARY = 2;


WITH CTE AS(
SELECT
    DEPT_NAME,
    EMP_NAME,
    SALARY,
    DENSE_RANK() OVER(PARTITION BY DEPT_NAME ORDER BY SALARY DESC) AS RANK_SALARY
FROM DEPARTMENTS as dept
JOIN EMPLOYEES as emp
ON dept.dept_id = emp.dept_id)
SELECT
    DEPT_NAME,
    EMP_NAME,
    RANK_SALARY AS second_highest_salary
FROM CTE
WHERE rank_salary = 2
ORDER BY DEPT_NAME;




-- Problem 2: Managers Earning Less Than Their Subordinates
/*
Question:
Find all managers who earn less salary than at least one of their direct reports.
Display:
    Manager Name
    Manager Salary
    Subordinate Name
    Subordinate Salary
*/
-- Solution

SELECT
    m.EMP_NAME AS Manager,
    m.SALARY as M_SALARY,
    e.EMP_NAME as Employee,
    e.SALARY as EMP_SALARY
FROM EMPLOYEES as m
JOIN EMPLOYEES as e
ON e.manager_id = m.emp_id
WHERE m.SALARY > e.SALARY ;

SELECT
    EMP_NAME,
    SALARY
FROM EMPLOYEES
WHERE SALARY < 50000
UNION
SELECT
   CONTRACTOR_NAME,
   SALARY
FROM CONTRACTORS
WHERE SALARY < 50000;

