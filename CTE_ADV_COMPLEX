-- ASSIGNING THE ACCOUNT TYPE 
USE ROLE ACCOUNTADMIN;

-- USING THE WAREHOUSE AVAILABLE
USE WAREHOUSE COMPUTE_WH;

-- CREATING A DATABASE NAMED AS SUBQUERIES_DATABASE
CREATE DATABASE IF NOT EXISTS COMPLEX_QUERIES_P2;

-- CREATING A SCHEMA NAMED AS SUBQUERIES_SCHEMA
CREATE SCHEMA IF NOT EXISTS COMPLEX_QUERIES_P2_SCHEMA;

-- USING THE DATABASE CREATED
USE DATABASE COMPLEX_QUERIES_P2;

-- USING THE SCHEMA CREATED 
USE SCHEMA COMPLEX_QUERIES_P2_SCHEMA;


-- CREATING A DATASET FOCUSING ON ZOMATO DATA
-- CREATING A TABLES FOR Customers
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    Name VARCHAR(100),
    Email VARCHAR(100),
    PhoneNumber VARCHAR(15),
    Address VARCHAR(200),
    City VARCHAR(50),
    RegistrationDate DATE
);


-- Creating a table for Restaurants
CREATE TABLE Restaurants (
    RestaurantID INT PRIMARY KEY,
    RestaurantName VARCHAR(100),
    CuisineType VARCHAR(50),
    Address VARCHAR(200),
    City VARCHAR(50),
    Rating DECIMAL(3, 2)
);


-- Creating a table for Food Items
CREATE TABLE FoodItems (
    FoodItemID INT PRIMARY KEY,
    RestaurantID INT,
    FoodName VARCHAR(100),
    Price DECIMAL(10, 2),
    Category VARCHAR(50),
    FOREIGN KEY (RestaurantID) REFERENCES Restaurants(RestaurantID)
);


-- Creating a table for Orders
CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustomerID INT,
    RestaurantID INT,
    OrderDate DATETIME,
    DeliveryDate DATETIME,
    TotalAmount DECIMAL(10, 2),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID),
    FOREIGN KEY (RestaurantID) REFERENCES Restaurants(RestaurantID)
);

-- Creating a table for Orders Items
CREATE TABLE OrderDetails (
    OrderDetailID INT PRIMARY KEY,
    OrderID INT,
    FoodItemID INT,
    Quantity INT,
    TotalPrice DECIMAL(10, 2),
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (FoodItemID) REFERENCES FoodItems(FoodItemID)
);


-- INSERTING INTO DATA INTO THE TABLE CUSTOMERS 
INSERT INTO CUSTOMERS
VALUES 
(1, 'Amit Sharma', 'amit.sharma@example.com', '+91-9876543210', '123, MG Road', 'Mumbai', '2022-01-10'),
(2, 'Rohit Verma', 'rohit.verma@example.com', '+91-9876543211', '456, Andheri East', 'Mumbai', '2022-02-12'),
(3, 'Priya Gupta', 'priya.gupta@example.com', '+91-9876543212', '789, Church Street', 'Bangalore', '2022-03-15'),
(4, 'Sneha Singh', 'sneha.singh@example.com', '+91-9876543213', '123, Rajaji Nagar', 'Chennai', '2022-04-18'),
(5, 'Ankit Mehta', 'ankit.mehta@example.com', '+91-9876543214', '56, Sector 5', 'Pune', '2022-05-20'),
(6, 'Neha Jain', 'neha.jain@example.com', '+91-9876543215', '34, New Ashok Nagar', 'Delhi', '2022-06-25'),
(7, 'Kunal Patel', 'kunal.patel@example.com', '+91-9876543216', '78, Vile Parle', 'Mumbai', '2022-07-01'),
(8, 'Pooja Rao', 'pooja.rao@example.com', '+91-9876543217', '45, Madhapur', 'Hyderabad', '2022-08-04'),
(9, 'Vivek Kumar', 'vivek.kumar@example.com', '+91-9876543218', '23, Gandhi Nagar', 'Delhi', '2022-09-10'),
(10, 'Ritu Saxena', 'ritu.saxena@example.com', '+91-9876543219', '12, Sola Road', 'Ahmedabad', '2022-10-15'),
(11, 'Rajesh Bhatt', 'rajesh.bhatt@example.com', '+91-9876543220', '88, Nehru Place', 'Delhi', '2022-11-10'),
(12, 'Alok Desai', 'alok.desai@example.com', '+91-9876543221', '54, MG Road', 'Kolkata', '2022-12-22'),
(13, 'Deepa Joshi', 'deepa.joshi@example.com', '+91-9876543222', '10, Lake Town', 'Kolkata', '2023-01-05'),
(14, 'Nishant Chawla', 'nishant.chawla@example.com', '+91-9876543223', '99, Banjara Hills', 'Hyderabad', '2023-02-01'),
(15, 'Aarav Aggarwal', 'aarav.aggarwal@example.com', '+91-9876543224', '89, Anna Nagar', 'Chennai', '2023-03-09'),
(16, 'Tanya Kapoor', 'tanya.kapoor@example.com', '+91-9876543225', '47, Koramangala', 'Bangalore', '2023-04-10'),
(17, 'Varun Malhotra', 'varun.malhotra@example.com', '+91-9876543226', '85, Civil Lines', 'Delhi', '2023-05-15'),
(18, 'Shreya Iyer', 'shreya.iyer@example.com', '+91-9876543227', '30, Sector 18', 'Noida', '2023-06-21'),
(19, 'Raghav Nair', 'raghav.nair@example.com', '+91-9876543228', '62, Jayanagar', 'Bangalore', '2023-07-05'),
(20, 'Divya Shetty', 'divya.shetty@example.com', '+91-9876543229', '14, Thane West', 'Mumbai', '2023-08-08'),
(21, 'Mohit Ghosh', 'mohit.ghosh@example.com', '+91-9876543230', '77, Rajarhat', 'Kolkata', '2023-09-14'),
(22, 'Kavita Kulkarni', 'kavita.kulkarni@example.com', '+91-9876543231', '58, Hinjewadi', 'Pune', '2023-10-02'),
(23, 'Rahul Chauhan', 'rahul.chauhan@example.com', '+91-9876543232', '42, Powai', 'Mumbai', '2023-11-12'),
(24, 'Sakshi Pandey', 'sakshi.pandey@example.com', '+91-9876543233', '75, Whitefield', 'Bangalore', '2023-12-16'),
(25, 'Ashwin Rao', 'ashwin.rao@example.com', '+91-9876543234', '28, Ballygunge', 'Kolkata', '2024-01-11'),
(26, 'Mona Bhatia', 'mona.bhatia@example.com', '+91-9876543235', '65, Park Street', 'Kolkata', '2024-02-03'),
(27, 'Sandeep Reddy', 'sandeep.reddy@example.com', '+91-9876543236', '38, Secunderabad', 'Hyderabad', '2024-03-01'),
(28, 'Gaurav Mehta', 'gaurav.mehta@example.com', '+91-9876543237', '12, Mulund West', 'Mumbai', '2024-04-07'),
(29, 'Anjali Khanna', 'anjali.khanna@example.com', '+91-9876543238', '61, Sector 44', 'Chandigarh', '2024-05-15'),
(30, 'Rahul Jain', 'rahul.jain@example.com', '+91-9876543239', '11, Connaught Place', 'Delhi', '2024-06-10'),
(31, 'Pankaj Joshi', 'pankaj.joshi@example.com', '+91-9876543240', '90, Kalina', 'Mumbai', '2024-07-04'),
(32, 'Swati Kapoor', 'swati.kapoor@example.com', '+91-9876543241', '25, JP Nagar', 'Bangalore', '2024-08-18'),
(33, 'Tarun Aggarwal', 'tarun.aggarwal@example.com', '+91-9876543242', '44, South Ex', 'Delhi', '2024-09-12'),
(34, 'Isha Sharma', 'isha.sharma@example.com', '+91-9876543243', '77, HSR Layout', 'Bangalore', '2024-10-08'),
(35, 'Yash Khatri', 'yash.khatri@example.com', '+91-9876543244', '80, Pali Hill', 'Mumbai', '2024-11-05'),
(36, 'Simran Gill', 'simran.gill@example.com', '+91-9876543245', '14, Sector 11', 'Chandigarh', '2024-12-02'),
(37, 'Aditya Thakur', 'aditya.thakur@example.com', '+91-9876543246', '88, Karol Bagh', 'Delhi', '2025-01-12'),
(38, 'Rishi Sethi', 'rishi.sethi@example.com', '+91-9876543247', '53, Andheri West', 'Mumbai', '2025-02-01'),
(39, 'Tanvi Mittal', 'tanvi.mittal@example.com', '+91-9876543248', '34, Koramangala', 'Bangalore', '2025-02-10'),
(40, 'Karthik Reddy', 'karthik.reddy@example.com', '+91-9876543249', '19, Jubilee Hills', 'Hyderabad', '2025-03-02'),
(41, 'Alisha Patel', 'alisha.patel@example.com', '+91-9876543250', '71, Old Airport Road', 'Bangalore', '2025-03-20'),
(42, 'Manish Shah', 'manish.shah@example.com', '+91-9876543251', '55, Marine Drive', 'Mumbai', '2025-04-15'),
(43, 'Payal Desai', 'payal.desai@example.com', '+91-9876543252', '13, Juhu Beach', 'Mumbai', '2025-05-07'),
(44, 'Abhinav Saxena', 'abhinav.saxena@example.com', '+91-9876543253', '7, Sector 21', 'Noida', '2025-06-12'),
(45, 'Radhika Iyer', 'radhika.iyer@example.com', '+91-9876543254', '60, Adyar', 'Chennai', '2025-07-22'),
(46, 'Nikhil Mehta', 'nikhil.mehta@example.com', '+91-9876543255', '99, Bandra East', 'Mumbai', '2025-08-14'),
(47, 'Meera Das', 'meera.das@example.com', '+91-9876543256', '28, Dum Dum', 'Kolkata', '2025-09-01'),
(48, 'Akash Gupta', 'akash.gupta@example.com', '+91-9876543257', '47, Vasant Kunj', 'Delhi', '2025-09-20'),
(49, 'Bhavana Sharma', 'bhavana.sharma@example.com', '+91-9876543258', '9, Sector 12', 'Gurgaon', '2025-10-01'),
(50, 'Rajiv Nair', 'rajiv.nair@example.com', '+91-9876543259', '39, Sakinaka', 'Mumbai', '2025-10-15');


-- INSERTING VALUES INTO THE RESTAURANTS TABLE 
INSERT INTO Restaurants (RestaurantID, RestaurantName, CuisineType, Address, City, Rating)
VALUES 
(1, 'Spice Garden', 'Indian', '12 MG Road', 'Mumbai', 4.5),
(2, 'Biryani House', 'Indian', '22 Park Street', 'Kolkata', 4.7),
(3, 'Chaat Station', 'Indian', '5 Brigade Road', 'Bangalore', 4.2),
(4, 'Sushi Express', 'Japanese', '10 Marine Drive', 'Mumbai', 4.8),
(5, 'Pizza Mania', 'Italian', '34 Connaught Place', 'New Delhi', 4.1),
(6, 'Tandoori Flames', 'Indian', '20 Juhu Beach Road', 'Mumbai', 4.3),
(7, 'Ramen Paradise', 'Japanese', '44 IT Park', 'Hyderabad', 4.4),
(8, 'Burger Town', 'American', '8 MG Road', 'Pune', 4.0),
(9, 'Pasta Fiesta', 'Italian', '50 Salt Lake', 'Kolkata', 4.6),
(10, 'Curry Leaf', 'Indian', '78 Indiranagar', 'Bangalore', 4.7),
(11, 'The Veggie Bowl', 'Vegan', '16 Church Street', 'Chennai', 4.2),
(12, 'Noodle Bar', 'Chinese', '42 HSR Layout', 'Bangalore', 4.1),
(13, 'Grill Master', 'American', '25 Park Street', 'Kolkata', 4.5),
(14, 'Seafood Harbor', 'Seafood', '9 Fort Kochi', 'Kochi', 4.8),
(15, 'Samosa King', 'Indian', '7 MG Road', 'Pune', 4.3),
(16, 'Shawarma Corner', 'Middle Eastern', '65 Vasant Kunj', 'New Delhi', 4.6),
(17, 'Pav Bhaji Express', 'Indian', '30 Lokhandwala', 'Mumbai', 4.5),
(18, 'Szechuan Delight', 'Chinese', '18 Banjara Hills', 'Hyderabad', 4.4),
(19, 'Taco Hub', 'Mexican', '11 MG Road', 'Chennai', 4.3),
(20, 'Gulab Jamun Heaven', 'Indian', '24 Lajpat Nagar', 'New Delhi', 4.9);




-- INSERTING VALUES INTO THE FoodItems
INSERT INTO FoodItems (FoodItemID, RestaurantID, FoodName, Price, Category)
VALUES 
(1, 1, 'Paneer Tikka', 250.00, 'Starter'),
(2, 1, 'Butter Chicken', 350.00, 'Main Course'),
(3, 2, 'Hyderabadi Biryani', 300.00, 'Main Course'),
(4, 2, 'Chicken Kebab', 220.00, 'Starter'),
(5, 3, 'Pani Puri', 120.00, 'Snack'),
(6, 3, 'Dahi Puri', 150.00, 'Snack'),
(7, 4, 'California Roll', 400.00, 'Main Course'),
(8, 4, 'Tempura', 350.00, 'Starter'),
(9, 5, 'Margherita Pizza', 450.00, 'Main Course'),
(10, 5, 'Garlic Bread', 150.00, 'Starter'),
(11, 6, 'Tandoori Chicken', 380.00, 'Main Course'),
(12, 6, 'Paneer Butter Masala', 320.00, 'Main Course'),
(13, 7, 'Tonkotsu Ramen', 500.00, 'Main Course'),
(14, 7, 'Miso Soup', 180.00, 'Starter'),
(15, 8, 'Classic Cheeseburger', 350.00, 'Main Course'),
(16, 8, 'French Fries', 120.00, 'Snack'),
(17, 9, 'Spaghetti Carbonara', 420.00, 'Main Course'),
(18, 9, 'Fettuccine Alfredo', 450.00, 'Main Course'),
(19, 10, 'Masala Dosa', 180.00, 'Snack'),
(20, 10, 'Sambar Vada', 140.00, 'Snack'),
(21, 11, 'Vegan Buddha Bowl', 380.00, 'Main Course'),
(22, 11, 'Tofu Salad', 250.00, 'Starter'),
(23, 12, 'Hakka Noodles', 200.00, 'Main Course'),
(24, 12, 'Spring Rolls', 150.00, 'Starter'),
(25, 13, 'BBQ Ribs', 550.00, 'Main Course'),
(26, 13, 'Buffalo Wings', 280.00, 'Starter'),
(27, 14, 'Grilled Prawns', 600.00, 'Main Course'),
(28, 14, 'Fish Curry', 450.00, 'Main Course'),
(29, 15, 'Samosa', 80.00, 'Snack'),
(30, 15, 'Aloo Tikki', 100.00, 'Snack'),
(31, 16, 'Chicken Shawarma', 200.00, 'Main Course'),
(32, 16, 'Falafel Wrap', 180.00, 'Main Course'),
(33, 17, 'Pav Bhaji', 150.00, 'Snack'),
(34, 17, 'Vada Pav', 50.00, 'Snack'),
(35, 18, 'Kung Pao Chicken', 350.00, 'Main Course'),
(36, 18, 'Chili Paneer', 300.00, 'Main Course'),
(37, 19, 'Beef Tacos', 250.00, 'Main Course'),
(38, 19, 'Chicken Quesadilla', 300.00, 'Main Course'),
(39, 20, 'Gulab Jamun', 100.00, 'Dessert'),
(40, 20, 'Rasgulla', 120.00, 'Dessert'),
(41, 1, 'Butter Naan', 40.00, 'Bread'),
(42, 1, 'Kadai Paneer', 290.00, 'Main Course'),
(43, 2, 'Veg Hakka Noodles', 220.00, 'Main Course'),
(44, 2, 'Chow Mein', 200.00, 'Main Course'),
(45, 3, 'Chocolate Lava Cake', 180.00, 'Dessert'),
(46, 3, 'Vanilla Ice Cream', 100.00, 'Dessert'),
(47, 4, 'Caesar Salad', 280.00, 'Starter'),
(48, 4, 'Greek Salad', 250.00, 'Starter'),
(49, 5, 'Mutton Rogan Josh', 450.00, 'Main Course'),
(50, 5, 'Biryani', 350.00, 'Main Course'),
(51, 6, 'Chicken Lollipop', 250.00, 'Starter'),
(52, 6, 'Pepper Chicken', 300.00, 'Starter'),
(53, 7, 'Fish Fingers', 320.00, 'Starter'),
(54, 7, 'Prawn Masala', 480.00, 'Main Course'),
(55, 8, 'Shahi Paneer', 320.00, 'Main Course'),
(56, 8, 'Dal Makhani', 260.00, 'Main Course'),
(57, 9, 'Chole Bhature', 180.00, 'Main Course'),
(58, 9, 'Rajma Chawal', 160.00, 'Main Course'),
(59, 10, 'Fried Rice', 180.00, 'Main Course'),
(60, 10, 'Manchurian', 220.00, 'Main Course'),
(61, 11, 'Tandoori Roti', 30.00, 'Bread'),
(62, 11, 'Garlic Naan', 50.00, 'Bread'),
(63, 12, 'Veg Spring Roll', 140.00, 'Starter'),
(64, 12, 'Paneer Tikka Masala', 320.00, 'Main Course'),
(65, 13, 'Chicken Fried Rice', 220.00, 'Main Course'),
(66, 13, 'Schezwan Chicken', 320.00, 'Main Course'),
(67, 14, 'Pav Bhaji', 140.00, 'Snack'),
(68, 14, 'Bhakri Pizza', 180.00, 'Snack'),
(69, 15, 'Chicken Biryani', 330.00, 'Main Course'),
(70, 15, 'Veg Biryani', 250.00, 'Main Course'),
(71, 16, 'Mutton Biryani', 400.00, 'Main Course'),
(72, 16, 'Egg Biryani', 280.00, 'Main Course'),
(73, 17, 'Paneer Bhurji', 220.00, 'Main Course'),
(74, 17, 'Veg Kofta', 300.00, 'Main Course'),
(75, 18, 'Chicken Caesar Salad', 270.00, 'Starter'),
(76, 18, 'Peri Peri Fries', 120.00, 'Snack'),
(77, 19, 'Chicken Shawarma Roll', 200.00, 'Main Course'),
(78, 19, 'Falafel Shawarma Roll', 180.00, 'Main Course'),
(79, 20, 'Mutton Seekh Kebab', 330.00, 'Starter'),
(80, 20, 'Chicken Tikka', 290.00, 'Starter');


-- NOW INSERTING VALUES INTO THE ORDERS 
INSERT INTO Orders (OrderID, CustomerID, RestaurantID, OrderDate, DeliveryDate, TotalAmount)
VALUES
(1, 1, 1, '2025-01-01 10:15:00', '2025-01-01 10:45:00', 500.00),
(2, 2, 2, '2025-01-02 09:20:00', '2025-01-02 09:40:00', 300.00),
(3, 3, 3, '2025-01-03 14:10:00', '2025-01-03 14:20:00', 450.00),
(4, 4, 4, '2025-01-04 08:30:00', '2025-01-04 08:55:00', 700.00),
(5, 5, 5, '2025-01-05 13:00:00', '2025-01-05 13:50:00', 850.00),
(6, 6, 6, '2025-01-06 11:15:00', '2025-01-06 11:45:00', 250.00),
(7, 7, 7, '2025-01-07 10:45:00', '2025-01-07 10:55:00', 300.00),
(8, 8, 8, '2025-01-08 15:25:00', '2025-01-08 15:55:00', 550.00),
(9, 9, 9, '2025-01-09 09:10:00', '2025-01-09 09:28:00', 400.00),
(10, 10, 10, '2025-01-10 12:05:00', '2025-01-10 12:45:00', 750.00),
(11, 11, 11, '2025-01-11 10:30:00', '2025-01-11 10:50:00', 300.00),
(12, 12, 12, '2025-01-12 13:10:00', '2025-01-12 13:32:50', 450.00),
(13, 13, 13, '2025-01-13 09:50:00', '2025-01-13 10:30:00', 250.00),
(14, 14, 14, '2025-01-14 11:35:00', '2025-01-14 12:05:00', 350.00),
(15, 15, 15, '2025-01-15 10:20:00', '2025-01-15 10:50:00', 600.00),
(16, 16, 16, '2025-01-16 12:45:00', '2025-01-16 12:56:00', 700.00),
(17, 17, 17, '2025-01-17 14:00:00', '2025-01-17 14:55:00', 850.00),
(18, 18, 18, '2025-01-18 13:30:00', '2025-01-18 13:56:00', 250.00),
(19, 19, 19, '2025-01-19 09:15:00', '2025-01-19 09:40:00', 450.00),
(20, 20, 1, '2025-01-20 11:10:00', '2025-01-20 11:20:00', 600.00),
(21, 21, 2, '2025-01-21 10:05:00', '2025-01-21 10:18:00', 475.00),
(22, 22, 3, '2025-01-22 12:10:00', '2025-01-22 12:50:00', 520.00),
(23, 23, 4, '2025-01-23 14:45:00', '2025-01-23 14:57:00', 640.00),
(24, 24, 5, '2025-01-24 08:30:00', '2025-01-24 08:44:00', 390.00),
(25, 25, 6, '2025-01-25 09:15:00', '2025-01-25 09:42:00', 700.00),
(26, 26, 7, '2025-01-26 13:00:00', '2025-01-26 13:30:00', 420.00),
(27, 27, 8, '2025-01-27 11:25:00', '2025-01-27 11:45:00', 550.00),
(28, 28, 9, '2025-01-28 10:40:00', '2025-01-28 10:55:00', 300.00),
(29, 29, 10, '2025-01-29 14:15:00', '2025-01-29 14:38:00', 860.00),
(30, 30, 11, '2025-01-30 13:05:00', '2025-01-30 13:45:00', 670.00),
(31, 1, 12, '2025-01-31 10:10:00', '2025-01-31 10:20:00', 510.00),
(32, 2, 13, '2025-02-01 12:20:00', '2025-02-01 12:50:00', 330.00),
(33, 3, 14, '2025-02-02 09:30:00', '2025-02-02 10:00:00', 480.00),
(34, 4, 15, '2025-02-03 11:45:00', '2025-02-03 11:57:00', 760.00),
(35, 5, 16, '2025-02-04 14:00:00', '2025-02-04 14:25:00', 820.00),
(36, 6, 17, '2025-02-05 10:50:00', '2025-02-05 11:17:00', 420.00),
(37, 7, 18, '2025-02-06 13:15:00', '2025-02-06 13:50:00', 390.00),
(38, 8, 19, '2025-02-07 09:40:00', '2025-02-07 09:55:00', 700.00),
(39, 9, 20, '2025-02-08 11:30:00', '2025-02-08 11:56:00', 610.00),
(40, 10, 1, '2025-02-09 10:25:00', '2025-02-09 10:35:00', 590.00),
(41, 11, 2, '2025-02-10 12:35:00', '2025-02-10 12:50:00', 675.00),
(42, 12, 3, '2025-02-11 14:45:00', '2025-02-11 14:59:00', 460.00),
(43, 13, 4, '2025-02-12 08:50:00', '2025-02-12 09:30:00', 385.00),
(44, 14, 5, '2025-02-13 09:55:00', '2025-02-13 10:20:00', 720.00),
(45, 15, 6, '2025-02-14 11:05:00', '2025-02-14 11:45:00', 550.00),
(46, 16, 7, '2025-02-15 13:20:00', '2025-02-15 13:50:00', 880.00),
(47, 17, 8, '2025-02-16 10:40:00', '2025-02-16 10:50:00', 520.00),
(48, 18, 9, '2025-02-17 12:00:00', '2025-02-17 12:23:00', 635.00),
(49, 19, 10, '2025-02-18 09:10:00', '2025-02-18 09:50:00', 720.00),
(50, 20, 11, '2025-02-19 11:45:00', '2025-02-19 11:58:00', 670.00),
(51, 1, 12, '2025-02-20 12:00:00', '2025-02-20 12:25:00', 500.00),
(52, 2, 13, '2025-02-21 14:30:00', '2025-02-21 15:00:00', 890.00),
(53, 3, 14, '2025-02-22 09:55:00', '2025-02-22 10:25:00', 550.00),
(54, 4, 15, '2025-02-23 11:05:00', '2025-02-23 11:40:00', 400.00),
(55, 5, 16, '2025-02-24 13:45:00', '2025-02-24 15:10:00', 810.00),
(56, 6, 17, '2025-02-25 10:15:00', '2025-02-25 10:50:00', 470.00),
(57, 7, 18, '2025-02-26 11:30:00', '2025-02-26 11:48:00', 675.00),
(58, 8, 19, '2025-02-27 12:25:00', '2025-02-27 12:55:00', 770.00),
(59, 9, 20, '2025-02-28 14:00:00', '2025-02-28 14:55:00', 460.00),
(60, 10, 1, '2025-03-01 09:40:00', '2025-03-01 10:10:00', 550.00),
(61, 11, 2, '2025-03-02 10:15:00', '2025-03-02 10:40:00', 790.00),
(62, 12, 3, '2025-03-03 14:00:00', '2025-03-03 15:14:00', 650.00),
(63, 13, 4, '2025-03-04 09:30:00', '2025-03-04 09:56:00', 710.00),
(64, 14, 5, '2025-03-05 13:50:00', '2025-03-05 14:20:00', 820.00),
(65, 15, 6, '2025-03-06 12:00:00', '2025-03-06 12:44:00', 900.00),
(66, 16, 7, '2025-03-07 11:20:00', '2025-03-07 11:50:00', 760.00),
(67, 17, 8, '2025-03-08 10:40:00', '2025-03-08 10:56:00', 530.00),
(68, 18, 9, '2025-03-09 14:25:00', '2025-03-09 14:44:00', 650.00),
(69, 19, 10, '2025-03-10 13:15:00', '2025-03-10 13:55:00', 710.00),
(70, 20, 11, '2025-03-11 09:05:00', '2025-03-11 09:12:00', 800.00),
(71, 1, 12, '2025-03-12 11:25:00', '2025-03-12 11:55:00', 920.00),
(72, 2, 13, '2025-03-13 12:45:00', '2025-03-13 12:59:00', 670.00),
(73, 3, 14, '2025-03-14 10:30:00', '2025-03-14 10:40:00', 560.00),
(74, 4, 15, '2025-03-15 14:10:00', '2025-03-15 14:40:00', 830.00),
(75, 5, 16, '2025-03-16 13:30:00', '2025-03-16 13:45:00', 780.00),
(76, 6, 17, '2025-03-17 09:50:00', '2025-03-17 09:56:00', 590.00),
(77, 7, 18, '2025-03-18 11:00:00', '2025-03-18 11:30:00', 650.00),
(78, 8, 19, '2025-03-19 12:15:00', '2025-03-19 12:45:00', 710.00),
(79, 9, 20, '2025-03-20 10:00:00', '2025-03-20 10:10:00', 650.00),
(80, 10, 1, '2025-03-21 13:40:00', '2025-03-21 13:44:00', 770.00),
(81, 11, 2, '2025-03-22 09:30:00', '2025-03-22 09:44:00', 750.00),
(82, 12, 3, '2025-03-23 10:55:00', '2025-03-23 10:59:00', 640.00),
(83, 13, 4, '2025-03-24 14:20:00', '2025-03-24 14:50:00', 710.00),
(84, 14, 5, '2025-03-25 09:10:00', '2025-03-25 09:40:00', 800.00),
(85, 15, 6, '2025-03-26 13:30:00', '2025-03-26 13:00:00', 870.00),
(86, 16, 7, '2025-03-27 12:40:00', '2025-03-27 12:55:00', 920.00),
(87, 17, 8, '2025-03-28 10:15:00', '2025-03-28 10:55:00', 780.00),
(88, 18, 9, '2025-03-29 11:05:00', '2025-03-29 11:35:00', 890.00),
(89, 19, 10, '2025-03-30 14:00:00', '2025-03-30 14:30:00', 810.00),
(90, 20, 11, '2025-03-31 13:25:00', '2025-03-31 13:55:00', 870.00),
(91, 1, 12, '2025-04-01 10:15:00', '2025-04-01 10:45:00', 820.00),
(92, 2, 13, '2025-04-02 13:00:00', '2025-04-02 13:30:00', 760.00),
(93, 3, 14, '2025-04-03 14:40:00', '2025-04-03 14:56:00', 730.00),
(94, 4, 15, '2025-04-04 09:20:00', '2025-04-04 09:30:00', 870.00),
(95, 5, 16, '2025-04-05 11:00:00', '2025-04-05 11:30:00', 890.00),
(96, 6, 17, '2025-04-06 13:10:00', '2025-04-06 13:20:00', 930.00),
(97, 7, 18, '2025-04-07 10:30:00', '2025-04-07 10:36:00', 810.00),
(98, 8, 19, '2025-04-08 11:45:00', '2025-04-08 11:55:00', 890.00),
(99, 9, 20, '2025-04-09 12:05:00', '2025-04-09 12:35:00', 780.00),
(100, 10, 1, '2025-04-10 13:25:00', '2025-04-10 13:55:00', 820.00),
(101, 11, 2, '2025-04-11 09:10:00', '2025-04-11 09:40:00', 720.00),
(102, 12, 3, '2025-04-12 14:20:00', '2025-04-12 14:50:00', 850.00),
(103, 13, 4, '2025-04-13 10:35:00', '2025-04-13 10:50:00', 780.00),
(104, 14, 5, '2025-04-14 12:10:00', '2025-04-14 12:40:00', 920.00),
(105, 15, 6, '2025-04-15 14:55:00', '2025-04-15 15:25:00', 870.00),
(106, 16, 7, '2025-04-16 11:00:00', '2025-04-16 11:10:00', 750.00),
(107, 17, 8, '2025-04-17 13:15:00', '2025-04-17 13:45:00', 680.00),
(108, 18, 9, '2025-04-18 10:50:00', '2025-04-18 10:56:00', 810.00),
(109, 19, 10, '2025-04-19 11:00:00', '2025-04-19 11:30:00', 850.00),
(110, 20, 11, '2025-04-20 14:00:00', '2025-04-20 14:20:00', 770.00),
(111, 1, 12, '2025-04-21 10:20:00', '2025-04-21 10:56:00', 820.00),
(112, 2, 13, '2025-04-22 13:30:00', '2025-04-22 13:44:00', 830.00),
(113, 3, 14, '2025-04-23 12:45:00', '2025-04-23 13:15:00', 870.00),
(114, 4, 15, '2025-04-24 11:35:00', '2025-04-24 12:00:00', 790.00),
(115, 5, 16, '2025-04-25 14:00:00', '2025-04-25 14:22:00', 930.00),
(116, 6, 17, '2025-04-26 12:10:00', '2025-04-26 12:40:00', 900.00),
(117, 7, 18, '2025-04-27 13:25:00', '2025-04-27 13:55:00', 850.00),
(118, 8, 19, '2025-04-28 10:00:00', '2025-04-28 11:30:00', 780.00),
(119, 9, 20, '2025-04-29 14:45:00', '2025-04-29 16:15:00', 860.00),
(120, 10, 1, '2025-04-30 12:30:00', '2025-04-30 14:00:00', 880.00);

-- Inserting the data for the order details table =
-- Inserting data into OrderDetails table for the first 5 orders
INSERT INTO OrderDetails (OrderDetailID, OrderID, FoodItemID, Quantity, TotalPrice) VALUES
(1, 1, 2, 1, 150.00), 
(2, 1, 4, 1, 250.00), 
(3, 1, 1, 1, 100.00), 
(4, 2, 3, 1, 200.00),  
(5, 2, 5, 1, 300.00),  
(6, 3, 5, 1, 300.00), 
(7, 3, 4, 1, 250.00),  
(8, 3, 1, 1, 100.00),  
(9, 4, 3, 1, 200.00),  
(10, 4, 2, 1, 150.00), 
(11, 5, 4, 1, 250.00), 
(12, 5, 5, 1, 300.00),
(13, 6, 2, 2, 300.00), 
(14, 6, 4, 1, 250.00),  
(15, 7, 1, 3, 300.00),  
(16, 7, 3, 1, 200.00),  
(17, 8, 2, 1, 150.00),  
(18, 8, 5, 1, 300.00),  
(19, 9, 3, 2, 400.00), 
(20, 9, 1, 1, 100.00),  
(21, 10, 5, 1, 300.00), 
(22, 10, 4, 1, 250.00), 
(23, 11, 2, 1, 150.00), 
(24, 11, 3, 1, 200.00), 
(25, 12, 4, 1, 250.00), 
(26, 12, 5, 1, 300.00), 
(27, 13, 1, 2, 200.00), 
(28, 13, 3, 1, 200.00), 
(29, 14, 2, 1, 150.00),
(30, 14, 5, 1, 300.00), 
(31, 15, 4, 2, 500.00),
(32, 16, 1, 1, 100.00), 
(33, 16, 2, 1, 150.00),
(34, 17, 5, 1, 300.00),
(35, 17, 3, 1, 200.00),
(36, 18, 1, 3, 300.00), 
(37, 18, 2, 1, 150.00),
(38, 19, 4, 1, 250.00), 
(39, 19, 1, 1, 100.00), 
(40, 20, 5, 1, 300.00), 
(41, 20, 2, 1, 150.00),
(42, 21, 1, 2, 200.00),  
(43, 21, 4, 1, 250.00),  
(44, 22, 2, 3, 450.00),  
(45, 22, 3, 1, 200.00), 
(46, 23, 5, 2, 600.00),  
(47, 23, 1, 1, 100.00),  
(48, 24, 3, 1, 200.00), 
(49, 24, 4, 1, 250.00),  
(50, 25, 2, 2, 300.00),  
(51, 25, 5, 1, 300.00),  
(52, 26, 1, 3, 300.00),  
(53, 26, 2, 1, 150.00),  
(54, 27, 4, 1, 250.00),  
(55, 27, 5, 1, 300.00),  
(56, 28, 3, 2, 400.00),  
(57, 28, 2, 1, 150.00),  
(58, 29, 1, 2, 200.00),  
(59, 29, 5, 1, 300.00),  
(60, 30, 4, 1, 250.00),  
(61, 30, 3, 1, 200.00),  
(62, 31, 5, 1, 300.00),
(63, 31, 2, 1, 150.00),
(64, 32, 3, 1, 200.00),
(65, 32, 1, 1, 100.00),
(66, 33, 4, 2, 500.00),
(67, 33, 1, 1, 100.00),
(68, 34, 5, 2, 600.00),
(69, 34, 3, 1, 200.00),
(70, 35, 2, 3, 450.00),
(71, 36, 4, 1, 250.00),
(72, 36, 5, 1, 300.00),
(73, 37, 3, 2, 400.00),
(74, 37, 2, 1, 150.00),
(75, 38, 1, 1, 100.00),
(76, 38, 5, 1, 300.00),
(77, 39, 4, 1, 250.00),
(78, 39, 2, 1, 150.00),
(79, 40, 3, 1, 200.00),
(80, 40, 5, 1, 300.00),
(81, 41, 1, 2, 200.00),
(82, 41, 4, 1, 250.00),
(83, 42, 2, 2, 300.00),
(84, 42, 5, 1, 300.00),
(85, 43, 3, 2, 400.00),
(86, 43, 1, 1, 100.00),
(87, 44, 5, 1, 300.00),
(88, 44, 2, 1, 150.00),
(89, 45, 4, 1, 250.00),
(90, 45, 3, 1, 200.00),
(91, 46, 5, 1, 300.00),
(92, 46, 1, 1, 100.00),
(93, 47, 2, 2, 300.00),
(94, 47, 4, 1, 250.00),
(95, 48, 1, 3, 300.00),
(96, 48, 3, 1, 200.00),
(97, 49, 5, 1, 300.00),
(98, 49, 2, 1, 150.00),
(99, 50, 4, 2, 500.00),
(100, 50, 1, 1, 100.00),
(101, 51, 3, 2, 400.00),  
(102, 51, 1, 1, 100.00),  
(103, 52, 4, 1, 250.00),  
(104, 52, 5, 1, 300.00),  
(105, 53, 2, 2, 300.00),  
(106, 53, 1, 2, 200.00),  
(107, 54, 3, 1, 200.00),  
(108, 54, 5, 2, 600.00),  
(109, 55, 4, 2, 500.00),  
(110, 55, 2, 1, 150.00),  
(111, 56, 5, 1, 300.00),  
(112, 56, 1, 2, 200.00),
(113, 57, 3, 1, 200.00),
(114, 57, 4, 1, 250.00),
(115, 58, 5, 2, 600.00),
(116, 58, 1, 1, 100.00),
(117, 59, 2, 3, 450.00),
(118, 59, 5, 1, 300.00),
(119, 60, 4, 1, 250.00),
(120, 60, 3, 1, 200.00),
(121, 61, 2, 2, 300.00),
(122, 61, 1, 2, 200.00),
(123, 62, 4, 2, 500.00),
(124, 62, 5, 1, 300.00),
(125, 63, 1, 1, 100.00),
(126, 63, 3, 2, 400.00),
(127, 64, 4, 1, 250.00),
(128, 64, 5, 2, 600.00),
(129, 65, 2, 3, 450.00),
(130, 66, 3, 2, 400.00),
(131, 66, 5, 1, 300.00),
(132, 67, 2, 2, 300.00),
(133, 67, 4, 1, 250.00),
(134, 68, 5, 1, 300.00),
(135, 68, 3, 1, 200.00),
(136, 69, 1, 2, 200.00),
(137, 69, 2, 1, 150.00),
(138, 70, 4, 2, 500.00),
(139, 70, 1, 1, 100.00),
(140, 71, 3, 1, 200.00),
(141, 71, 5, 1, 300.00),
(142, 72, 2, 3, 450.00),
(143, 72, 1, 1, 100.00),
(144, 73, 4, 2, 500.00),
(145, 73, 5, 1, 300.00),
(146, 74, 1, 1, 100.00),
(147, 74, 3, 2, 400.00),
(148, 75, 5, 2, 600.00),
(149, 75, 4, 1, 250.00),
(150, 76, 3, 1, 200.00),
(151, 76, 5, 1, 300.00),
(152, 77, 1, 3, 300.00),
(153, 77, 2, 2, 300.00),
(154, 78, 4, 2, 500.00),
(155, 78, 5, 1, 300.00),
(156, 79, 1, 1, 100.00),
(157, 79, 3, 2, 400.00),
(158, 80, 4, 1, 250.00),
(159, 80, 2, 2, 300.00),
(160, 81, 5, 2, 600.00),
(161, 81, 1, 1, 100.00),
(162, 82, 2, 2, 300.00),
(163, 82, 4, 1, 250.00),
(164, 83, 5, 1, 300.00),
(165, 83, 3, 1, 200.00),
(166, 84, 2, 3, 450.00),
(167, 84, 1, 1, 100.00),
(168, 85, 4, 2, 500.00),
(169, 85, 5, 1, 300.00),
(170, 86, 1, 1, 100.00),
(171, 86, 2, 3, 450.00),
(172, 87, 4, 1, 250.00),
(173, 87, 3, 1, 200.00),
(174, 88, 5, 1, 300.00),
(175, 88, 1, 1, 100.00),
(176, 89, 2, 2, 300.00),
(177, 89, 5, 1, 300.00),
(178, 90, 4, 2, 500.00),
(179, 90, 1, 1, 100.00),
(180, 91, 3, 2, 400.00),
(181, 91, 5, 1, 300.00),
(182, 92, 2, 1, 150.00),
(183, 92, 4, 2, 500.00),
(184, 93, 5, 1, 300.00),
(185, 93, 1, 2, 200.00),
(186, 94, 3, 1, 200.00),
(187, 94, 5, 2, 600.00),
(188, 95, 2, 3, 450.00),
(189, 96, 4, 1, 250.00),
(190, 96, 5, 1, 300.00),
(191, 97, 3, 2, 400.00),
(192, 97, 1, 1, 100.00),
(193, 98, 5, 1, 300.00),
(194, 98, 4, 1, 250.00),
(195, 99, 1, 3, 300.00),
(196, 99, 2, 2, 300.00),
(197, 100, 4, 2, 500.00),
(198, 100, 3, 1, 200.00);

-- LET US NOT BEGIN TO SOLVE COMPLEX QUERIES

SELECT * FROM FOODITEMS;
SELECT * FROM CUSTOMERS;
SELECT * FROM ORDERDETAILS;
SELECT * FROM ORDERS;
SELECT * FROM RESTAURANTS;

ALTER TABLE ORDERS
DROP COLUMN TOTALAMOUNT;

/*
    Identify the top -performing food item for each resturant based on order and revenue
    write query to:
    determine for each resturant the food item that was ordered the most(heighest count) and the food item that generate the most revenue:
    Display the following details
    Resturant name
    food item
    Total item was ordered 
    total revenue generated for that item
    A category label
    "MOST ORDERED, REVENUE RANKER"if the item rank 1st by both order count and revenue
    "MOST ORDERED" if the item rank 1st only by number of order
    "MOST REVENUE" if the item rank 1st only by revenue
sort the result by resturant name and category (in descending order)
*/

WITH MOST_ORDERED_FOOD AS(
    SELECT 
    T4.RESTAURANTNAME,
    T3.FOODNAME,
    COUNT(T3.FOODNAME) AS TOTAL_TIME_ORDERED,
    SUM(T1.QUANTITY *T3.PRICE) AS TOTAL_ROW_AMOUNT,
    DENSE_RANK () OVER(PARTITION BY T4.RESTAURANTNAME ORDER BY TOTAL_TIME_ORDERED DESC) AS TOTAL_ORDER_RANKING,
    DENSE_RANK () OVER(PARTITION BY T4.RESTAURANTNAME ORDER BY TOTAL_ROW_AMOUNT DESC) AS REVENUE_RANKING
    FROM ORDERDETAILS AS T1
    JOIN ORDERS AS T2
    ON T1.ORDERID = T2.ORDERID
    JOIN FOODITEMS AS T3
    ON T3.FOODITEMID = T1.FOODITEMID
    JOIN RESTAURANTS AS T4
    ON T4.RESTAURANTID = T2.RESTAURANTID
    GROUP BY T4.RESTAURANTNAME,T3.FOODNAME,T3.PRICE
),
RANKING_BASED_FILTER_DATA AS(
    SELECT *
    FROM MOST_ORDERED_FOOD
    WHERE TOTAL_ORDER_RANKING = 1
    UNION 
    SELECT * 
    FROM MOST_ORDERED_FOOD
    WHERE REVENUE_RANKING =1
)
SELECT
    RESTAURANTNAME,
    FOODNAME,
    TOTAL_TIME_ORDERED,
    TOTAL_ROW_AMOUNT AS TOTAL_REVENUE,
    CASE 
    WHEN TOTAL_ORDER_RANKING =1 AND REVENUE_RANKING =1 THEN 'MOST ORDERED, REVENUE RANKER'
    WHEN TOTAL_ORDER_RANKING =1 AND TOTAL_ORDER_RANKING <> REVENUE_RANKING THEN 'MOST ORDERED'
    ELSE 'REVENUE RANKER'
    END AS CATEGORY
FROM RANKING_BASED_FILTER_DATA
ORDER BY RESTAURANTNAME ASC, CATEGORY DESC;

WITH MOST_ORDERED_FOOD AS(
    SELECT 
    T4.RESTAURANTNAME,
    T3.FOODNAME,
    COUNT(T3.FOODNAME) AS TOTAL_TIME_ORDERED,
    SUM(T1.QUANTITY *T3.PRICE) AS TOTAL_ROW_AMOUNT,
    FROM ORDERDETAILS AS T1
    JOIN ORDERS AS T2
    ON T1.ORDERID = T2.ORDERID
    JOIN FOODITEMS AS T3
    ON T3.FOODITEMID = T1.FOODITEMID
    JOIN RESTAURANTS AS T4
    ON T4.RESTAURANTID = T2.RESTAURANTID
    GROUP BY T4.RESTAURANTNAME,T3.FOODNAME,T3.PRICE
)
SELECT
    RESTAURANTNAME,
    FOODNAME,
    TOTAL_TIME_ORDERED,
    TOTAL_ROW_AMOUNT AS TOTAL_REVENUE,
FROM MOST_ORDERED_FOOD
ORDER BY RESTAURANTNAME ASC,TOTAL_REVENUE DESC;


/*
Identify top spender by cusion type ,write query to identify the top 3 customer who have spent the most on a specific cusin type(eg.'Indian'). Include the customer name,total amount spent and the count of order they placed for cuisien type
*/
SELECT 
    CUISINETYPE,
    NAME,
    TOTAL_ITEM_ORDERED,
    TOTAL_REVENUE
FROM (
SELECT 
    T4.CUISINETYPE,
    T5.NAME,
    COUNT(T1.ORDERID) AS TOTAL_ITEM_ORDERED,
    SUM(T1.QUANTITY * T3.PRICE) AS TOTAL_REVENUE,
    DENSE_RANK() OVER(PARTITION BY T4.CUISINETYPE ORDER BY TOTAL_REVENUE DESC ) AS RANKED
FROM ORDERDETAILS AS T1
JOIN ORDERS AS T2
ON T1.ORDERID = T2.ORDERID
JOIN FOODITEMS AS T3
ON T3.FOODITEMID = T1.FOODITEMID
JOIN RESTAURANTS AS T4
ON T4.RESTAURANTID = T2.RESTAURANTID
JOIN CUSTOMERS AS T5
ON T5.CUSTOMERID = T2.CUSTOMERID
GROUP BY T5.NAME,T4.CUISINETYPE) AS BASE_TABLE
WHERE
    CUISINETYPE = 'Indian' AND
    RANKED <= 3
ORDER BY CUISINETYPE ASC,RANKED ASC;


/*
Write a sql query to get the customer-category pattern from the database
Note that we need to query the name,category ,total_spending
*/
SELECT
    T4.NAME,
    T2.CATEGORY,
    SUM(T1.QUANTITY * T2.PRICE) AS TOTAL_SPENDING
FROM ORDERDETAILS AS T1
JOIN FOODITEMS AS T2
ON T1.FOODITEMID = T2.FOODITEMID
JOIN ORDERS AS T3
ON T3.ORDERID = T1.ORDERID
JOIN CUSTOMERS AS T4
ON T4.CUSTOMERID = T3.CUSTOMERID
GROUP BY 1,2
ORDER BY T4.NAME ASC,T2.CATEGORY DESC;

SELECT * FROM ORDERDETAILS;
SELECT * FROM ORDERS;
SELECT * FROM FOODITEMS;
SELECT * FROM RESTAURANTS;

